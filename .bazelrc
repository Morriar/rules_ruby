# Bazel RC file for Local
#
# Flare Folks: please feel free to update this as you see fit. I put
# initial values here that make the output pretty and github caching
# possible. I am not as certain about the JVM args. 

# Startup Options
startup --host_jvm_args=-Xmx500m

build --symlink_prefix=_bazel/ --ui_event_filters=-DEBUG --define gotags=bazel,crdb_test_off
test --symlink_prefix=_bazel/ --define gotags=bazel,crdb_test --test_env=TZ=
query --ui_event_filters=-DEBUG

# Build Options
build --verbose_failures 
build --jobs 30 
build --progress_report_interval=2
build --color yes
build --incompatible_strict_action_env
build --show_timestamps

# These inherit from Build 
test --verbose_failures 
test --test_verbose_timeout_warnings 
test --verbose_explanations

# These also inherit from build
query --keep_going

# Custom user overrides 
# https://docs.bazel.build/versions/master/best-practices.html#bazelrc
try-import %workspace%/.bazelrc.user
try-import %workspace%/user.bazelrc

# Use our custom-configured c++ toolchain.

build:clang_config --crosstool_top=//toolchain:clang_suite

# Use --cpu as a differentiator.

build:clang_config --cpu=k8

# Use the default Bazel C++ toolchain to build the tools used during the
# build.

build:clang_config --host_crosstool_top=@bazel_tools//tools/cpp:toolchain

# ##############################################################################################
# REF: https://github.com/cockroachdb/cockroach/blob/master/.bazelrc
#
# cross-compilation configurations. Add e.g. --config=crosslinux to turn these on
# TODO(ricky): Having to specify both the `platform` and the `crosstool_top` is
# weird, but I think `rules_foreign_cc` doesn't play too nicely with `--platforms`?
build:crosslinux --platforms=//toolchains:cross_linux
build:crosslinux --crosstool_top=@toolchain_cross_x86_64-unknown-linux-gnu//:suite
build:crosslinux '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-pc-linux-gnu'
build:crosslinux --config=ci
build:crosswindows --platforms=//toolchains:cross_windows
build:crosswindows --crosstool_top=@toolchain_cross_x86_64-w64-mingw32//:suite
build:crosswindows '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-w64-mingw32'
build:crosswindows --config=ci
build:crossmacos --platforms=//toolchains:cross_macos
build:crossmacos --crosstool_top=@toolchain_cross_x86_64-apple-darwin19//:suite
build:crossmacos '--workspace_status_command=./build/bazelutil/stamp.sh x86_64-apple-darwin19'
build:crossmacos --config=ci
build:crosslinuxarm --platforms=//toolchains:cross_linux_arm
build:crosslinuxarm --crosstool_top=@toolchain_cross_aarch64-unknown-linux-gnu//:suite
build:crosslinuxarm '--workspace_status_command=./build/bazelutil/stamp.sh aarch64-unknown-linux-gnu'
build:crosslinuxarm --config=ci

# developer configurations. Add e.g. --config=devdarwinx86_64 to turn these on.
build:devdarwinx86_64 --crosstool_top=@toolchain_dev_darwin_x86-64//:suite
# NOTE(ricky): This is consumed in `BUILD` files (see
# `toolchains/BUILD.bazel`).
build:devdarwinx86_64 --config=dev
build:dev --define cockroach_bazel_dev=y
build:dev --stamp --workspace_status_command=./build/bazelutil/stamp.sh

